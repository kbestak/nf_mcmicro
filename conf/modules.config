/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLE_AND_MARKER_SHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/input_validation/sample_and_marker_sheet_check" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MARKER_SHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/input_validation/marker_sheet_check" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BASICPY {
        containerOptions = '--entrypoint "" --user root'
        publishDir = [
            path: { "${params.outdir}/illumination_correction/basicpy" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: ASHLAR {
        containerOptions = '--user root'
        publishDir = [
            path: { "${params.outdir}/registration/ashlar" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: "DEEPCELL_MESMER" {
        ext.prefix = { params.unstitch_restitch ? "mask_${meta.id}_${meta.tileID}" : "mask_${meta.id}" }
        ext.args  = [ "",
            "--image-mpp ${params.pixel_size}",
            "--nuclear-channel ${params.nuclear_channel}",
            "--compartment ${params.mesmer_model}"
        ].join(" ").trim()
        publishDir = [
            path: { "${params.outdir}/segmentation/deepcell_mesmer" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: "EXTRACTCHANNELS" {
        ext.args  = [ "",
            "--pixel_size ${params.pixel_size}",
            "--channels 5"
        ].join(" ").trim()
        publishDir = [
            path: { "${params.outdir}/extractchannels" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: "UNSTITCH" {
        ext.args = '--pixel_size 0.4977523 --overlap 32 --channels 0'
        publishDir = [
            path: { "${params.outdir}/unstitch" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: "RESTITCH" {
        ext.prefix = { "mask_restitched_${meta.id}" }
        ext.args = '--overlap 32'
        publishDir = [
            path: { "${params.outdir}/segmentation/restitched" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: MCQUANT {
        ext.prefix = { "mcquant_${meta.id}" }
        publishDir = [
            path: { "${params.outdir}/quantification/mcquant" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: SPOT2CELL {
        ext.args  = [ "",
            params.spot_intensity_threshold ? "--threshold ${params.spot_intensity_threshold}" : ""
        ].join(" ").trim()
        ext.prefix = { "spot2cell_${meta.id}" }
    }

    withName: SPOTIFLOW {
        ext.args  = [ "",
            params.spotiflow_prob_threshold ? "--probability-threshold ${params.spotiflow_prob_threshold}" : ""
        ].join(" ").trim()
    }

    withName: COMBINEQUANTIFICATIONS {
        ext.prefix = { "combined_${meta.id}" }
    }

    /*
    withName: SCIMAP_MCMICRO {
        containerOptions = '-e NUMBA_CACHE_DIR=/tmp'
    }
    */
}
